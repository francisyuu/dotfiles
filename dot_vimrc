"----------------------------------------------------------------------
"  Author:francisyuu
"  Date:221001
"  File:.vimrc
"----------------------------------------------------------------------
"Sections
"--General
"--Interface
"--Text
"--Typing
"--Keymap
"--Overwrite
"--Plugins
"--Abbreviations
"------------------------- General--------------------------------------------------

" how many lines of :commands are remembered,default 20
set history=500  

"Enable filetype plugins
filetype plugin on  


"autoread current file when it is changed from the outside
set autoread  

"Ignore case in search patterns
set ignorecase
"Override the ignorecase option if the searching pattern conains upper case characters
set smartcase
"highlight search results
set hlsearch
"show search result as the pattern typed so far without pressing <enter>
set incsearch
"Changes the special character that can be used in search patterns
set magic

" Automatically save before commands like :next and :make
set autowrite		

"turn backup/swapfile off
set noswapfile
set nobackup
set nowritebackup

" Disable audible bell because it's annoying.
set noerrorbells visualbell t_vb=

"auto change dir whenever you open a file
set autochdir 

"------------------------- Interface--------------------------------------------------
colorscheme molokai 
set background=dark

" Always show the status line at the bottom, even if you only have one window open.
set laststatus=2

"show command-line completion above when pressing wildchar(default:<Tab>)
set wildmenu

"set file patterns those will be ignored when completing
set wildignore=*.o,*.obj,*/.git/*

"show the line and column number of the cursor position, separated by a comma.
set ruler

"A buffer becomes hidder when it is abandoned
set hidden

" Show line numbers.
set number
" relativenumber enabled
set relativenumber
" highlight current line
set cursorline " 

"Don't redraw while executing macros,registers and other commands that haven't been typed
set lazyredraw

"show typed cmd right bottom
set showcmd

"already replaced by plugin vim-airline
"run :so $VIMRUNTIME/syntax/hitest.vim to prview all highlight groups
"set statusline=
"set statusline+=%#PmenuSel#
"set statusline+=%{StatuslineGit()}
"set statusline+=%#LineNr#
"set statusline+=\ %f
"set statusline+=\ %r
"set statusline+=%m
"set statusline+=%=
"set statusline+=%#CursorColumn#
"set statusline+=\ type:%y
"set statusline+=\ format:%{&fileencoding?&fileencoding:&encoding}
"set statusline+=\ %p%%
"set statusline+=\ L%l/%L:C%c
"set statusline+=\ 

"------------------------- Text--------------------------------------------------
"syntax highlighting
syntax on

"folds bar with width 1 column
set foldcolumn=1
"fold method:syntax
set foldmethod=syntax
"start editing whit all folds not closed
set foldlevelstart=99
"set foldenable 
set foldenable
"set encoding
set encoding=utf8

"set minimal number of screen lines to keep above and below the cursor
set scrolloff=10
set sidescrolloff=10

"------------------------- Typing--------------------------------------------------
"allow backspacing over autoindent/line breaks/start
set backspace=indent,eol,start

"show matching brackets briefly when inserteing one
set showmatch
"show matching time 0.2second
set matchtime=2

"Use spaces instead of tabs except Makefile
set expandtab
set smarttab
set shiftwidth=4
"delete 4 spaces only at the beginning of a line
set tabstop=4
"delete 4 spaces everywhere
set softtabstop=4 
autocmd BufNewFile,BufRead makefile,Makefile set noexpandtab

"copy indent from current line when starting a new line
set autoindent
set smartindent

"Enable filetype indents
filetype indent on  

"enable spellchecking
"set spell

"------------------------- Keymap-------------------------------------------------
" Unbind some useless/annoying default key bindings.
nmap Q <Nop> " 'Q' in normal mode enters Ex mode. You almost never want this.


" Enable mouse support. You should avoid relying on this too much, but it can
" sometimes be convenient.
"set mouse+=a
"
nnoremap <Left>  :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up>    :echoe "Use k"<CR>
nnoremap <down>  :echoe "use j"<cr>
" ...and in insert mode
"inoremap <left>  <esc>:echoe "use h"<cr>
"inoremap <right> <esc>:echoe "use l"<cr>
"inoremap <up>    <esc>:echoe "use k"<cr>
"inoremap <down>  <esc>:echoe "use j"<cr>

"Disable highlight
noremap <silent> <leader>h :noh<cr>
"vnoremap <silent> * :<C-u>call VisualSelection('', '')<CR>/<C-R>=@/<CR><CR>

"move between windows
map <C-j> <C-W>j 
map <C-k> <C-W>k 
map <C-h> <C-W>h 
map <C-l> <C-W>l 

"remap go to screen top H bottom J
nnoremap J L
nnoremap K H
"remap go to linestart H lineend L
nnoremap H 0
nnoremap L $

nmap dL d$a
nmap dH d0a
"let space be <leader>
let mapleader=" " 
"quick save and quick quit
nmap <leader>w :w<cr> 
nmap <leader>q :q<cr>
"quick select section/all
nmap <leader>ss {jV}
nmap <leader>sa ggVG
"quick move between windows
nmap <leader>j <C-W>j
"nmap <leader>k <C-W>k
nmap <leader>l <C-W>l
"nmap <leader>h <C-W>h

nmap <leader>- :new<cr>
nmap <leader>c :tabnew<cr>
nmap <leader>n :tabnext<cr>

"------------------------- Overwrite--------------------------------------------------

"Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

"------------------------- Plugins--------------------------------------------------
"default plugin directory:'~/.vim/plugged'
call plug#begin()

"-------------interface-----------
Plug 'tomasr/molokai'
Plug 'mileszs/ack.vim'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
"-------------file tree/search----
Plug 'preservim/nerdtree'
Plug 'majutsushi/tagbar'
Plug 'kien/ctrlp.vim'
"-------------quick typing-------
Plug 'easymotion/vim-easymotion'
Plug 'tpope/vim-surround'
Plug 'scrooloose/nerdcommenter'
"Plug 'valloric/youcompleteme'
Plug 'tpope/vim-repeat'
"-------------coding support----
Plug 'w0rp/ale'


call plug#end()

set updatetime=200 "quickly check 
let g:airline_section_c='%f %r %m %='
let g:airline_section_x='type:%y'
let g:airline_section_y='&encoding'
let g:airline_section_z='%p%% L%l/%L:C%c'
let g:airline_theme='molokai'
"------------------------- Abbrivations--------------------------------------------------
:iab abgCl -------------------------str--------------------------------------------------<esc>0fscw
:iab abgCb //--------------------------------------------------------------------<enter>//str<enter>//--------------------------------------------------------------------<esc>0kfscw
"------------------------- Funcions--------------------------------------------------
function! VisualSelection(direction, extra_filter) range
    let l:saved_reg = @"
    execute "normal! vgvy"

    let l:pattern = escape(@", "\\/.*'$^~[]")
    let l:pattern = substitute(l:pattern, "\n$", "", "")

    if a:direction == 'gv'
        call CmdLine("Ack '" . l:pattern . "' " )
    elseif a:direction == 'replace'
        call CmdLine("%s" . '/'. l:pattern . '/')
    endif

    let @/ = l:pattern
    let @" = l:saved_reg
endfunction

function! HasPaste()
    if &paste
        return 'PASTE MODE  '
    endif
    return ''
endfunction

function! GitBranch()
  return system("git rev-parse --abbrev-ref HEAD 2>/dev/null | tr -d '\n'")
endfunction

function! StatuslineGit()
  let l:branchname = GitBranch()
  return strlen(l:branchname) > 0?'  '.l:branchname.' ':''
endfunction
